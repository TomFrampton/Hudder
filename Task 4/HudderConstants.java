/* Generated By:JJTree&JavaCC: Do not edit this line. HudderConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HudderConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int FUN = 5;
  /** RegularExpression Id. */
  int HANDBACK = 6;
  /** RegularExpression Id. */
  int REPEAT = 7;
  /** RegularExpression Id. */
  int UNTIL = 8;
  /** RegularExpression Id. */
  int WHENEVER = 9;
  /** RegularExpression Id. */
  int DO = 10;
  /** RegularExpression Id. */
  int OTHERWISE = 11;
  /** RegularExpression Id. */
  int START = 12;
  /** RegularExpression Id. */
  int STOP = 13;
  /** RegularExpression Id. */
  int AND = 14;
  /** RegularExpression Id. */
  int OR = 15;
  /** RegularExpression Id. */
  int VAR = 16;
  /** RegularExpression Id. */
  int OUTPUT = 17;
  /** RegularExpression Id. */
  int IF = 18;
  /** RegularExpression Id. */
  int THEN = 19;
  /** RegularExpression Id. */
  int ELSE = 20;
  /** RegularExpression Id. */
  int NOT = 21;
  /** RegularExpression Id. */
  int IDENTIFIER = 22;
  /** RegularExpression Id. */
  int STRING = 23;
  /** RegularExpression Id. */
  int NUMBER = 24;
  /** RegularExpression Id. */
  int PLUS = 25;
  /** RegularExpression Id. */
  int MINUS = 26;
  /** RegularExpression Id. */
  int MULT = 27;
  /** RegularExpression Id. */
  int DIV = 28;
  /** RegularExpression Id. */
  int ASSIGNMENT = 29;
  /** RegularExpression Id. */
  int EQUAL = 30;
  /** RegularExpression Id. */
  int NOT_EQUAL = 31;
  /** RegularExpression Id. */
  int GREATER = 32;
  /** RegularExpression Id. */
  int LESS = 33;
  /** RegularExpression Id. */
  int GREATER_EQUAL = 34;
  /** RegularExpression Id. */
  int LESS_EQUAL = 35;
  /** RegularExpression Id. */
  int O_PAR = 36;
  /** RegularExpression Id. */
  int C_PAR = 37;
  /** RegularExpression Id. */
  int COMMA = 38;
  /** RegularExpression Id. */
  int SEMI_COLON = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"fun\"",
    "\"handback\"",
    "\"repeat\"",
    "\"until\"",
    "\"whenever\"",
    "\"do\"",
    "\"otherwise\"",
    "\"start\"",
    "\"stop\"",
    "\"and\"",
    "\"or\"",
    "\"var\"",
    "\"output\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"!\"",
    "<IDENTIFIER>",
    "\"\\\".*\\\"\"",
    "<NUMBER>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\":=\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"(\"",
    "\")\"",
    "\"\\\'\"",
    "\";\"",
  };

}
